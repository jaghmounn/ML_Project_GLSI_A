image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""  # Disable TLS for Docker-in-Docker

stages:
  - build
  - test
  - security_scan  # Added security_scan stage
  - deploy

build:
  stage: build
  script:
    - echo "Logging into the GitLab Container Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo "Building the Docker image..."
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - echo "Pushing the Docker image..."
    - docker push $CI_REGISTRY_IMAGE:latest

test:
  stage: test
  script:
    - echo "Pulling the Docker image..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - echo "Testing the Docker image..."
    - docker run --rm $CI_REGISTRY_IMAGE python -c "print('Tests Passed')"

security_scan:
  stage: security_scan  # New stage for security scanning
  image: aquasec/trivy:latest  # Use Trivy image for vulnerability scanning
  script:
    - echo "Scanning Docker image with Trivy..."
    # Correct the command syntax: Scan the Docker image
    - trivy image --format json --exit-code 1 --severity HIGH,CRITICAL --ignore-unfixed --timeout 5m -o trivy-report.json $CI_REGISTRY_IMAGE:latest
  artifacts:
    paths:
      - trivy-report.json  # Save the Trivy report as an artifact
    reports:
      secret_detection: trivy-report.json  # Use secret_detection for security reports


deploy:
  stage: deploy
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock  # Ensure the GitLab Runner can access the Docker daemon
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""  # Disables TLS for Docker-in-Docker
    DOCKER_CONFIG: "/builds/.docker"  # Ensure this path exists and is writable
  script:
    - echo "Deploying the Docker image locally..."
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker stop devops-ml-app || true
    - docker rm devops-ml-app || true
    - docker run -d -p 5000:5000 --name devops-ml-app $CI_REGISTRY_IMAGE:latest
  tags:
    - local
